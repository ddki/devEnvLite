name: Release CI

on:
  push:
    tags:
      - 'v*'

env:
  NODE_VERSION: '22.18.0'
  PNPM_VERSION: '10.14.0'
  app_name: 'DevEnvLite'

jobs:
  create-release:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    timeout-minutes: 10
    outputs:
      release_id: ${{ steps.create-release.outputs.id }}
      app_version: ${{ steps.get-version.outputs.version }}
      # app_name: ${{ steps.get-name.outputs.name }}

    steps:
      - name: Ê£ÄÂá∫‰ª£Á†Å‰ªìÂ∫ì
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: ËÆæÁΩÆ Node.js ÁéØÂ¢É
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: ÂÆâË£Ö pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}
          run_install: false

      - name: Ëé∑Âèñ pnpm Â≠òÂÇ®ÁõÆÂΩï
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: ËÆæÁΩÆ pnpm ÁºìÂ≠ò
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: ÂÆâË£ÖÂâçÁ´Ø‰æùËµñ
        run: pnpm install --frozen-lockfile

      - name: ÊèêÂèñÂèëÂ∏ÉËØ¥Êòé
        id: extract-release-notes
        uses: ffurrer2/extract-release-notes@v2
        with:
          changelog_file: CHANGELOG.md

      - name: Ëé∑ÂèñÂ∫îÁî®ÁâàÊú¨
        id: get-version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "app_version=$VERSION" >> $GITHUB_ENV

      # - name: Ëé∑ÂèñÂ∫îÁî®ÂêçÁß∞
      #   id: get-name
      #   run: |
      #     NAME=$(node -p "require('./package.json').name")
      #     echo "name=$NAME" >> $GITHUB_OUTPUT
      #     echo "app_name=$NAME" >> $GITHUB_ENV

      - name: ÂàõÂª∫ÂèëÂ∏ÉÁâàÊú¨
        id: create-release
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: 'v${{ env.app_version }}'
          name: '${{ env.app_name }} v${{ env.app_version }}'
          prerelease: false
          body: |
            ## üéâ ÂèëÂ∏ÉÊó•Âøó
            
            ${{ steps.extract-release-notes.outputs.release_notes }}
            
            ---
          generateReleaseNotes: true

  build-tauri:
    needs: create-release
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest' # for Arm based macs (M1 and above).
            args: '--target aarch64-apple-darwin'
          - platform: 'macos-latest' # for Intel based macs.
            args: '--target x86_64-apple-darwin'
          - platform: 'ubuntu-latest'
            args: ''
          - platform: 'windows-latest'
            args: ''
    
    runs-on: ${{ matrix.platform }}
    timeout-minutes: 60
    
    steps:
      - name: Ê£ÄÂá∫‰ª£Á†Å‰ªìÂ∫ì
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: ÂÆâË£Ö Rust Á®≥ÂÆöÁâà
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: ÂÆâË£Ö‰æùËµñ (‰ªÖÈôê Ubuntu)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev webkit2gtk-4.0 libappindicator3-dev librsvg2-dev patchelf openssl

      - name: ËÆæÁΩÆ Node.js ÁéØÂ¢É
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: ÂÆâË£Ö pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}
          run_install: false

      - name: Ëé∑Âèñ pnpm Â≠òÂÇ®ÁõÆÂΩï
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: ËÆæÁΩÆ pnpm ÁºìÂ≠ò
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: ËÆæÁΩÆ Rust ÁºìÂ≠ò
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            src-tauri/target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: ÂÆâË£Ö Node.js ‰æùËµñ
        run: pnpm install --frozen-lockfile

      - name: ÊûÑÂª∫ Tauri Â∫îÁî®
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}
        with:
          releaseId: ${{ needs.create-release.outputs.release_id }}
          args: ${{ matrix.args }}
          updaterJsonPreferNsis: true
